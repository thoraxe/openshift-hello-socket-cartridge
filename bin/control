#!/bin/bash
source $OPENSHIFT_CARTRIDGE_SDK_BASH

function run_hook() {
  local path="$OPENSHIFT_REPO_DIR/.openshift/action_hooks/$1"
  if [ -f "$path" -a -x "$path" ]
  then
    "$path"
  else
    return 0
  fi
}

function start() {
    logf="${OPENSHIFT_LOG_DIR}/hskt.log"
    echo "`date` Starting application '$OPENSHIFT_APP_NAME' ..." >> $logf

    ruby "${OPENSHIFT_HSKT_DIR}/usr/hellosocket.rb" >> $logf 2>&1 &

    ret=$?
    npid=$!
    if [ $ret -eq 0 ]; then
            echo "$npid" > "$OPENSHIFT_HSKT_DIR/hskt.pid"
    else
            echo "Application '$OPENSHIFT_APP_NAME' failed to start - $ret" 1>&2 >> $logf
            exit $ret
    fi
}

function stop() {
  if [ -f $OPENSHIFT_HSKT_DIR/hskt.pid ]; then
          hskt_pid=$( cat $OPENSHIFT_HSKT_DIR/hskt.pid 2> /dev/null )
  fi
  
  if [ -n "$hskt_pid" ]; then
          logf="${OPENSHIFT_LOG_DIR}/hskt.log"
          echo "`date` Stopping application '$OPENSHIFT_APP_NAME' ..." >> $logf
          /bin/kill $hskt_pid
          ret=$?
          rm -f $OPENSHIFT_HSKT_DIR/hskt.pid
  else
          echo "Warning: Application '$OPENSHIFT_APP_NAME' server exists without a pid file.  Use force-stop to kill." 1>&2
  fi
}

function restart() {
    stop
    start
}

function status() {
   if output=$(curl http://$OPENSHIFT_HSKT_IP:$OPENSHIFT_HSKT_PORT 2>&1 )
   then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function reload() {
    client_result "Reloading DIY cart"
    restart
}

function tidy() {
  client_message "Emptying diy logs in dir: $OPENSHIFT_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_LOG_DIR/hskt.log*
}

case "$1" in
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  reload)    reload ;;
  tidy)      tidy ;;
  *)         exit 0
esac
